apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    name: grafana
spec:
  selector:
    name: grafana
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 12802
  type: NodePort
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: grafana
  labels:
    name: grafana
spec:
  replicas: 1
  selector:
    name: grafana
  template:
    metadata:
      labels:
        name: grafana
    spec:
      nodeSelector:
        node-role: prometheus
      volumes:
      - name: grafana-data
        hostPath: {path: /var/lib/grafana}
      containers:
      - name: grafana
        image:  10.209.224.13:10500/rds/grafana:latest
        livenessProbe:
          httpGet:
            path: /datasources
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 5
        env:
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: TZ
          value: "Asia/Shanghai"
        ports:
          - containerPort: 3000
        volumeMounts:
          - name: grafana-data
            mountPath: /var/lib/grafana
      # tolerations:
      # - key: node-role.prometheus
      #   effect: NoSchedule
