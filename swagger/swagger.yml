swagger: "2.0"
info:
  title: tidb API
  description: Tidb-operator creates/configures/manages tidb clusters atop Kubernetes.
  version: 1.0.0
  contact:
    email: yangxin45@wanda.cn
basePath: /tidb/api/v1
paths:
  /metadata/:
    get:
      tags:
      - metadata
      description: get all metatada
      operationId: MetadataController.GetAll
      responses:
        "200":
          schema:
            $ref: '#/definitions/operator.Metadata'
        "404":
          description: not find
        "500":
          description: etcd error
    put:
      tags:
      - metadata
      description: update the metadata
      operationId: MetadataController.Update
      parameters:
      - in: body
        name: body
        description: body for metadata content
        required: true
        schema:
          $ref: '#/definitions/operator.Metadata'
      responses:
        "200": {}
        "400":
          description: bad request
        "500":
          description: cannt store metadata
  /metadata/{key}:
    get:
      tags:
      - metadata
      description: get sub metadata by key
      operationId: MetadataController.Get
      parameters:
      - in: path
        name: key
        description: The key for metadata property
        required: true
        type: string
      responses:
        "200":
          description: '{string}'
        "404":
          description: :key not found
  /tidbs/:
    post:
      tags:
      - tidbs
      description: create a tidb
      operationId: TidbController.CreateTidb
      parameters:
      - in: body
        name: body
        description: body for tidb content
        required: true
        schema:
          $ref: '#/definitions/operator.Db'
      responses:
        "200": {}
        "403":
          description: body is empty
  /tidbs/{cell}:
    get:
      tags:
      - tidbs
      description: get tidb by cell
      operationId: TidbController.Get a tidb
      parameters:
      - in: path
        name: cell
        description: The cell for tidb name
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/operator.Db'
        "404":
          description: :key not found
    delete:
      tags:
      - tidbs
      description: delete the tidb instance
      operationId: TidbController.DeleteTidb
      parameters:
      - in: path
        name: cell
        description: The cell you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: cell is empty
    patch:
      tags:
      - tidbs
      description: partially update the specified Tidb
      operationId: TidbController.Patch
      parameters:
      - in: path
        name: cell
        description: The cell for pd name
        required: true
        type: string
      - in: body
        name: body
        description: 'Data format reference: http://jsonpatch.com/'
        required: true
        schema:
          $ref: '#/definitions/operator.Db'
      responses:
        "200": {}
        "403":
          description: unsupport operation
  /tidbs/{cell}/events:
    get:
      tags:
      - tidbs
      description: get all events
      operationId: TidbController.GetEvents
      parameters:
      - in: path
        name: cell
        description: The cell for tidb name
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/operator.Events'
  /tidbs/{cell}/migrate:
    post:
      tags:
      - tidbs
      description: migrate mysql data to tidb
      operationId: TidbController.Migrate
      parameters:
      - in: path
        name: cell
        description: The database name for tidb
        required: true
        type: string
      - in: body
        name: body
        description: Body for src mysql
        required: true
        schema:
          $ref: '#/definitions/controllers.Migrator'
      responses:
        "200": {}
        "403":
          description: body is empty
  /tidbs/{user}/limit:
    post:
      tags:
      - tidbs
      description: Whether the user creates tidb for approval
      operationId: TidbController.Limit
      parameters:
      - in: path
        name: user
        description: The user id
        required: true
        type: string
      - in: body
        name: body
        description: body for resource content
        required: true
        schema:
          $ref: '#/definitions/operator.ApprovalConditions'
      responses:
        "200": {}
        "403":
          description: body is empty
  /users/{user}/tidbs:
    get:
      tags:
      - users
      description: Get tidbs by user
      operationId: UserController.GetTidbsByUser
      parameters:
      - in: path
        name: user
        description: The user id
        required: true
        type: string
      responses:
        "200":
          schema:
            type: array
            items:
              $ref: '#/definitions/controllers.Dbs'
        "404":
          description: :user not found
definitions:
  .Mysql:
    type: object
  .ObjectMeta:
    type: object
  .TypeMeta:
    type: object
  controllers.Dbs:
    title: Dbs
    type: object
    properties:
      tidbs:
        type: array
        items:
          $ref: '#/definitions/operator.Db'
      total:
        type: integer
        format: int64
  controllers.Migrator:
    title: Migrator
    type: object
    properties:
      sync:
        type: boolean
      tables: {}
  operator.ApprovalConditions:
    title: ApprovalConditions
    type: object
    properties:
      dbr:
        type: integer
        format: int32
      kvr:
        type: integer
        format: int32
  operator.Db:
    title: Db
    type: object
    properties:
      metadata:
        $ref: '#/definitions/metav1.ObjectMeta'
      operator:
        type: string
      owner:
        $ref: '#/definitions/operator.Owner'
      pd:
        $ref: '#/definitions/operator.Pd'
      schema:
        $ref: '#/definitions/operator.Schema'
      status:
        $ref: '#/definitions/operator.Status'
      tidb:
        $ref: '#/definitions/operator.Tidb'
      tikv:
        $ref: '#/definitions/operator.Tikv'
  operator.Event:
    title: Event
    type: object
    properties:
      cell:
        type: string
      count:
        type: integer
        format: int64
      first:
        type: string
        format: string
      key:
        type: string
      last:
        type: string
        format: string
      msg:
        type: string
      sc:
        type: string
      type:
        type: string
  operator.Events:
    title: Events
    type: object
    properties:
      events:
        type: array
        items:
          $ref: '#/definitions/operator.Event'
      metadata:
        $ref: '#/definitions/metav1.ObjectMeta'
  operator.K8s:
    title: K8s
    type: object
    properties:
      proxys:
        type: string
      volume:
        type: string
  operator.Member:
    title: Member
    type: object
    properties:
      name:
        type: string
      state:
        type: integer
        format: int64
  operator.MetaSpec:
    title: MetaSpec
    type: object
    properties:
      ac:
        $ref: '#/definitions/operator.ApprovalConditions'
      k8s:
        $ref: '#/definitions/operator.K8s'
      pd:
        $ref: '#/definitions/operator.Unit'
      specifications:
        type: array
        items:
          $ref: '#/definitions/operator.Specification'
      tidb:
        $ref: '#/definitions/operator.Unit'
      tikv:
        $ref: '#/definitions/operator.Unit'
      versions: {}
  operator.Metadata:
    title: Metadata
    type: object
    properties:
      metadata:
        $ref: '#/definitions/metav1.ObjectMeta'
      spec:
        $ref: '#/definitions/operator.MetaSpec'
  operator.Owner:
    title: Owner
    type: object
    properties:
      desc:
        type: string
      reason:
        type: string
      userId:
        type: string
      userName:
        type: string
  operator.Pd:
    title: Spec
    type: object
    properties:
      capatity:
        type: integer
        format: int64
      cpu:
        type: integer
        format: int64
      innerAddresses: {}
      mem:
        type: integer
        format: int64
      member:
        type: integer
        format: int64
      members:
        type: array
        items:
          $ref: '#/definitions/operator.Member'
      outerAddresses: {}
      replicas:
        type: integer
        format: int64
      tidbdata_volume:
        type: string
      version:
        type: string
  operator.Phase:
    type: object
  operator.Preference:
    title: Preference
    type: object
    properties:
      desc:
        type: string
      name:
        type: string
      replicas:
        $ref: '#/definitions/operator.Replicas'
  operator.Replicas:
    type: object
  operator.Schema:
    title: Schema
    type: object
    properties:
      name:
        type: string
      password:
        type: string
      user:
        type: string
  operator.Spec:
    title: Spec
    type: object
    properties:
      capatity:
        type: integer
        format: int64
      cpu:
        type: integer
        format: int64
      mem:
        type: integer
        format: int64
      replicas:
        type: integer
        format: int64
      tidbdata_volume:
        type: string
      version:
        type: string
  operator.Specification:
    title: Specification
    type: object
    properties:
      desc:
        type: string
      name:
        type: string
      preferences:
        type: array
        items:
          $ref: '#/definitions/operator.Preference'
  operator.Status:
    title: Status
    type: object
    properties:
      available:
        type: boolean
      message:
        type: string
      migrateState:
        type: string
      outerAddresses: {}
      outerStatusAddresses: {}
      phase:
        $ref: '#/definitions/operator.Phase'
      reason:
        type: string
      scaleCount:
        type: integer
        format: int64
      scaleState:
        type: integer
        format: int64
      upgradeState:
        type: string
  operator.Store:
    title: Store
    type: object
    properties:
      address:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      nodeName:
        type: string
      state:
        $ref: '#/definitions/operator.StoreStatus'
  operator.StoreStatus:
    type: object
  operator.Tidb:
    title: Spec
    type: object
    properties:
      capatity:
        type: integer
        format: int64
      cpu:
        type: integer
        format: int64
      mem:
        type: integer
        format: int64
      members:
        type: array
        items:
          $ref: '#/definitions/operator.Member'
      replicas:
        type: integer
        format: int64
      tidbdata_volume:
        type: string
      version:
        type: string
  operator.Tikv:
    title: Spec
    type: object
    properties:
      availableReplicas:
        type: integer
        format: int64
      capatity:
        type: integer
        format: int64
      cpu:
        type: integer
        format: int64
      cur:
        type: string
      mem:
        type: integer
        format: int64
      member:
        type: integer
        format: int64
      readyReplicas:
        type: integer
        format: int64
      replicas:
        type: integer
        format: int64
      stores:
        $ref: '#/definitions/46197.Store'
      tidbdata_volume:
        type: string
      version:
        type: string
  operator.Unit:
    title: Unit
    type: object
    properties:
      capacity:
        type: integer
        format: int64
      cpu:
        type: integer
        format: int64
      max:
        type: integer
        format: int64
      memory:
        type: integer
        format: int64
tags:
- name: metadata
  description: |
    MetadataController operations about metadata
- name: tidbs
  description: |
    TidbController operations about tidb
- name: users
  description: |
    UserController operations about all tidbs
