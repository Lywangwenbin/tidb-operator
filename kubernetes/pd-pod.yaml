apiVersion: v1
kind: Pod
metadata:
  name: pd-{{cell}}-{{id}}
  labels:
    component: pd
    cell: {{cell}}
    app: tidb
spec:
  # default is 30s
  terminationGracePeriodSeconds: 5
  restartPolicy: Never
  # DNS A record: [m.Name].[clusterName].Namespace.svc.cluster.local.
  # For example, pd-test-001 in default namesapce will have DNS name
  # 'pd-test-001.test.default.svc.cluster.local'.
  hostname: pd-{{cell}}-{{id}}
  subdomain: pd-{{cell}}-srv
  volumes:
  - name: datadir
    emptyDir: {}
  containers:
    - name: pd
      image: {{registry}}/pd:{{version}}
      imagePullPolicy: Never
      resources:
        limits:
          memory: "{{mem}}Mi"
          cpu: "{{cpu}}m"
      volumeMounts:
      - name: datadir
        mountPath: /data
      command:
        - bash
        - "-c"
        - |
          client_urls="http://0.0.0.0:2379"
          # FQDN
          advertise_client_urls="http://pd-{{cell}}-{{id}}.pd-{{cell}}-srv.{{namespace}}.svc.cluster.local:2379"
          peer_urls="http://0.0.0.0:2380"
          advertise_peer_urls="http://pd-{{cell}}-{{id}}.pd-{{cell}}-srv.{{namespace}}.svc.cluster.local:2380"

          # set prometheus
          sed -i -e 's/{m-job}/{{cell}}/' /etc/pd/config.toml

          data_dir=/data/pd
          if [ -d $data_dir ]; then
            echo "Resuming with existing data dir:$data_dir"
          else
            echo "First run for this member"
            # First wait for the desired number of replicas to show up.
            echo "Waiting for {{replicas}} replicas in SRV record for {{cell}}..."
            until [ $(getpods {{cell}} | wc -l) -eq {{replicas}} ]; do
              echo "[$(date)] waiting for {{replicas}} entries in SRV record for {{cell}}"
              sleep 1
            done
          fi

          urls=""
          for id in {1..{{replicas}}}; do
            id=$(printf "%03d\n" $id)
            urls+="pd-{{cell}}-${id}=http://pd-{{cell}}-${id}.pd-{{cell}}-srv.{{namespace}}.svc.cluster.local:2380,"
          done
          urls=${urls%,}
          echo "Initial-cluster:$urls"

          pd-server \
          --name="$HOSTNAME" \
          --data-dir="$data_dir" \
          --client-urls="$client_urls" \
          --advertise-client-urls="$advertise_client_urls" \
          --peer-urls="$peer_urls" \
          --advertise-peer-urls="$advertise_peer_urls" \
          --initial-cluster=$urls \
          --join=http://pd-{{cell}}:2379 \
          --config="/etc/pd/config.toml"